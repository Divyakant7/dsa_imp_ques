vector<int> JobScheduling(Job arr[], int n) 
    { 
        //unordered_map<int,int>mp;
        vector<pair<int,int>>v;
        for(int i=0;i<n;i++){
            //cout<<arr[i].profit<<" "<<arr[i].dead<<endl;
            v.push_back({arr[i].profit,arr[i].dead});
        }
        sort(v.begin(),v.end());
        reverse(v.begin(),v.end());
        //int result[n];
        bool slot[n];
        for(int i=0;i<n;i++){
            slot[i] = false;
        }
        int ans=0,count=0;
        for(int i=0;i<n;i++){
            for(int j = min(n,v[i].second-1);j>=0;j--){
                if(slot[j]==false){
                    ans+=v[i].first;
                    count++;
                    slot[j] = true;
                    break;
                }
            }
        }
        return {count,ans};
        
        
    } 
