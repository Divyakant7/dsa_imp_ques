/*
Given an undirected graph with V vertices and E edges, check whether it contains any cycle or not. 

Example 1:

Input:   

Output: 1
Explanation: 1->2->3->4->1 is a cycle.

*/
bool dfs(vector<int> adj[],vector<int>&vis,int node,int par){
        vis[node] = 1;
        for(auto child:adj[node]){
            if(vis[child]==0){
                if(dfs(adj,vis,child,node)==true){
                    return true;
                }
            }
            else{
                if(child!=par){
                    return true;
                }
            }
        }
        return false;
    }
    bool isCycle(int V, vector<int> adj[]) {
        vector<int>vis(V,0);
        for(int i = 0;i<V;i++){
            if(vis[i]==0){
            bool k =dfs(adj,vis,i,-1);
            if(k) return k;
            }
        }
        return false;
    }
